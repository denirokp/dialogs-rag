#!/usr/bin/env python3
"""
Migration Script to Enhanced System
–°–∫—Ä–∏–ø—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–∞ —É–ª—É—á—à–µ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É
"""

import json
import shutil
import logging
from pathlib import Path
from typing import Dict, List, Any
import pandas as pd

logger = logging.getLogger(__name__)

def migrate_config():
    """–ú–∏–≥—Ä–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    print("üîÑ –ú–∏–≥—Ä–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é...")
    
    # –ß–∏—Ç–∞–µ–º —Å—Ç–∞—Ä—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    old_config_path = Path("config.py")
    if old_config_path.exists():
        print("   ‚úì –ù–∞–π–¥–µ–Ω–∞ —Å—Ç–∞—Ä–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è")
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—Ç–∞—Ä–æ–π
        new_config = {
            "openai_api_key": "your-api-key-here",
            "processing": {
                "enable_autocorrection": True,
                "enable_adaptive_prompts": True,
                "enable_continuous_learning": True,
                "enable_monitoring": True,
                "enable_scaling": True,
                "max_dialogs_per_batch": 1000,
                "quality_threshold": 0.7,
                "auto_save_results": True,
                "output_directory": "enhanced_results"
            },
            "redis_host": "localhost",
            "redis_port": 6379,
            "redis_db": 0
        }
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        with open("enhanced_config.json", "w", encoding="utf-8") as f:
            json.dump(new_config, f, ensure_ascii=False, indent=2)
        
        print("   ‚úì –°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: enhanced_config.json")
    else:
        print("   ‚ö†Ô∏è  –°—Ç–∞—Ä–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é")

def migrate_data():
    """–ú–∏–≥—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö"""
    print("üîÑ –ú–∏–≥—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ...")
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    migrated_dir = Path("migrated_data")
    migrated_dir.mkdir(exist_ok=True)
    
    # –ú–∏–≥—Ä–∏—Ä—É–µ–º –¥–∏–∞–ª–æ–≥–∏
    dialogs_path = Path("data/dialogs.xlsx")
    if dialogs_path.exists():
        print("   ‚úì –ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª –¥–∏–∞–ª–æ–≥–æ–≤")
        
        # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª
        shutil.copy2(dialogs_path, migrated_dir / "dialogs.xlsx")
        print("   ‚úì –î–∏–∞–ª–æ–≥–∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã")
    else:
        print("   ‚ö†Ô∏è  –§–∞–π–ª –¥–∏–∞–ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # –ú–∏–≥—Ä–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    artifacts_dir = Path("artifacts")
    if artifacts_dir.exists():
        print("   ‚úì –ù–∞–π–¥–µ–Ω—ã –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã")
        
        # –ö–æ–ø–∏—Ä—É–µ–º –≤–∞–∂–Ω—ã–µ —Ñ–∞–π–ª—ã
        important_files = [
            "aggregate_results.json",
            "stage2_extracted.jsonl",
            "stage3_normalized.jsonl",
            "stage4_clusters.json"
        ]
        
        for file_name in important_files:
            file_path = artifacts_dir / file_name
            if file_path.exists():
                shutil.copy2(file_path, migrated_dir / file_name)
                print(f"   ‚úì –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω {file_name}")
    
    # –ú–∏–≥—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç—ã
    reports_dir = Path("reports")
    if reports_dir.exists():
        print("   ‚úì –ù–∞–π–¥–µ–Ω—ã –æ—Ç—á–µ—Ç—ã")
        
        # –ö–æ–ø–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç—ã
        for report_file in reports_dir.glob("*.json"):
            shutil.copy2(report_file, migrated_dir / report_file.name)
            print(f"   ‚úì –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω {report_file.name}")

def migrate_prompts():
    """–ú–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–æ–º–ø—Ç–æ–≤"""
    print("üîÑ –ú–∏–≥—Ä–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç—ã...")
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ø—Ä–æ–º–ø—Ç–æ–≤
    prompts_dir = Path("enhanced_prompts")
    prompts_dir.mkdir(exist_ok=True)
    
    # –ú–∏–≥—Ä–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ–º–ø—Ç—ã
    old_prompts_dir = Path("prompts")
    if old_prompts_dir.exists():
        print("   ‚úì –ù–∞–π–¥–µ–Ω—ã —Å—Ç–∞—Ä—ã–µ –ø—Ä–æ–º–ø—Ç—ã")
        
        for prompt_file in old_prompts_dir.glob("*.txt"):
            shutil.copy2(prompt_file, prompts_dir / prompt_file.name)
            print(f"   ‚úì –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω {prompt_file.name}")
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ —É–ª—É—á—à–µ–Ω–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã
    enhanced_prompts = {
        "extract_entities_enhanced.txt": """–ò–∑–≤–ª–µ–∫–∏ –∫–ª—é—á–µ–≤—ã–µ —Å—É—â–Ω–æ—Å—Ç–∏ –∏–∑ –¥–∏–∞–ª–æ–≥–∞ –æ –¥–æ—Å—Ç–∞–≤–∫–µ.

–î–∏–∞–ª–æ–≥: {dialog}

–ö–æ–Ω—Ç–µ–∫—Å—Ç: –≠—Ç–æ –¥–∏–∞–ª–æ–≥ –º–µ–∂–¥—É –∫–ª–∏–µ–Ω—Ç–æ–º –∏ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º —Å–ª—É–∂–±—ã –¥–æ—Å—Ç–∞–≤–∫–∏.

–ó–∞–¥–∞—á–∏:
1. –ü—Ä–æ–±–ª–µ–º—ã –¥–æ—Å—Ç–∞–≤–∫–∏ - –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ —Å—Ç–æ–ª–∫–Ω—É–ª—Å—è –∫–ª–∏–µ–Ω—Ç
2. –ò–¥–µ–∏ —É–ª—É—á—à–µ–Ω–∏—è - –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é —Å–µ—Ä–≤–∏—Å–∞
3. –ë–∞—Ä—å–µ—Ä—ã - –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –¥–æ—Å—Ç–∞–≤–∫–∏
4. –†–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ —Ü–∏—Ç–∞—Ç—ã - —Ç–æ—á–Ω—ã–µ –≤—ã—Å–∫–∞–∑—ã–≤–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Ü–∏—Ç–∞—Ç–∞–º:
- –ú–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤
- –°–æ–¥–µ—Ä–∂–∞—Ç –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –æ –¥–æ—Å—Ç–∞–≤–∫–µ
- –ë–µ–∑ –º–µ–∂–¥–æ–º–µ—Ç–∏–π –∏ –º—É—Å–æ—Ä–∞
- –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ

–§–æ—Ä–º–∞—Ç JSON:
{{
    "problems": ["–∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ —Å –¥–µ—Ç–∞–ª—è–º–∏"],
    "ideas": ["–∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è –∏–¥–µ—è —É–ª—É—á—à–µ–Ω–∏—è"],
    "barriers": ["–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –±–∞—Ä—å–µ—Ä"],
    "quotes": ["–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–∞—è —Ü–∏—Ç–∞—Ç–∞ –∫–ª–∏–µ–Ω—Ç–∞"]
}}""",
        
        "cluster_labeling_enhanced.txt": """–°–æ–∑–¥–∞–π –æ—Å–º—ã—Å–ª–µ–Ω–Ω—ã–µ –º–µ—Ç–∫–∏ –¥–ª—è –∫–ª–∞—Å—Ç–µ—Ä–æ–≤ –¥–∏–∞–ª–æ–≥–æ–≤.

–ö–ª–∞—Å—Ç–µ—Ä: {cluster}

–î–∏–∞–ª–æ–≥–∏ –≤ –∫–ª–∞—Å—Ç–µ—Ä–µ: {dialogs}

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –º–µ—Ç–∫–∞–º:
- –ö—Ä–∞—Ç–∫–∏–µ –∏ –ø–æ–Ω—è—Ç–Ω—ã–µ (2-4 —Å–ª–æ–≤–∞)
- –û—Ç—Ä–∞–∂–∞—é—Ç –æ—Å–Ω–æ–≤–Ω—É—é —Ç–µ–º—É –∫–ª–∞—Å—Ç–µ—Ä–∞
- –ù–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
- –ë–µ–∑ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ç–µ—Ä–º–∏–Ω–æ–≤

–ü—Ä–∏–º–µ—Ä—ã —Ö–æ—Ä–æ—à–∏—Ö –º–µ—Ç–æ–∫:
- "–ü—Ä–æ–±–ª–µ–º—ã —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π"
- "–ñ–∞–ª–æ–±—ã –Ω–∞ –∫—É—Ä—å–µ—Ä–æ–≤"
- "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é"
- "–í–æ–ø—Ä–æ—Å—ã –ø–æ –æ–ø–ª–∞—Ç–µ"

–ú–µ—Ç–∫–∞: {label}"""
    }
    
    for file_name, content in enhanced_prompts.items():
        with open(prompts_dir / file_name, "w", encoding="utf-8") as f:
            f.write(content)
        print(f"   ‚úì –°–æ–∑–¥–∞–Ω {file_name}")

def create_migration_report():
    """–°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –æ –º–∏–≥—Ä–∞—Ü–∏–∏"""
    print("üîÑ –°–æ–∑–¥–∞–µ–º –æ—Ç—á–µ—Ç –æ –º–∏–≥—Ä–∞—Ü–∏–∏...")
    
    report = {
        "migration_date": "2024-01-15",
        "migrated_components": [
            "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã",
            "–î–∞–Ω–Ω—ã–µ –¥–∏–∞–ª–æ–≥–æ–≤",
            "–ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏",
            "–û—Ç—á–µ—Ç—ã",
            "–ü—Ä–æ–º–ø—Ç—ã"
        ],
        "new_features": [
            "–ê–≤—Ç–æ–∫–æ—Ä—Ä–µ–∫—Ü–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ —Ü–∏—Ç–∞—Ç",
            "–ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã —Å A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º",
            "–ù–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –Ω–∞ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö",
            "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–∞—á–µ—Å—Ç–≤–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏",
            "–ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –±–æ–ª—å—à–∏—Ö –æ–±—ä–µ–º–æ–≤"
        ],
        "migration_steps": [
            "1. –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –¥–∞–Ω–Ω—ã–µ –≤ migrated_data/",
            "2. –°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è enhanced_config.json",
            "3. –°–æ–∑–¥–∞–Ω—ã —É–ª—É—á—à–µ–Ω–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã –≤ enhanced_prompts/",
            "4. –ù–∞—Å—Ç—Ä–æ–µ–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ enhanced/",
            "5. –°–æ–∑–¥–∞–Ω –≥–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª enhanced_main.py"
        ],
        "next_steps": [
            "1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements_enhanced.txt",
            "2. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å API –∫–ª—é—á –≤ enhanced_config.json",
            "3. –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É: python enhanced_main.py --input migrated_data/dialogs.xlsx --output test_results",
            "4. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ test_results/",
            "5. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –∞–ª–µ—Ä—Ç—ã"
        ]
    }
    
    with open("migration_report.json", "w", encoding="utf-8") as f:
        json.dump(report, f, ensure_ascii=False, indent=2)
    
    print("   ‚úì –û—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω: migration_report.json")

def create_quick_start_guide():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞ –ø–æ –±—ã—Å—Ç—Ä–æ–º—É —Å—Ç–∞—Ä—Ç—É"""
    print("üîÑ –°–æ–∑–¥–∞–µ–º —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –±—ã—Å—Ç—Ä–æ–º—É —Å—Ç–∞—Ä—Ç—É...")
    
    guide = """# üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π

## 1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π

```bash
pip install -r requirements_enhanced.txt
```

## 2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏

```bash
# –°–æ–∑–¥–∞–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
python enhanced_main.py --create-config my_config.json

# –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ API –∫–ª—é—á –≤ my_config.json
```

## 3. –¢–µ—Å—Ç–æ–≤–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞

```bash
# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å –≤–∫–ª—é—á–µ–Ω–∏–µ–º –≤—Å–µ—Ö —É–ª—É—á—à–µ–Ω–∏–π
python enhanced_main.py --input migrated_data/dialogs.xlsx --enable-all --show-dashboard

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –±–æ–ª—å—à–æ–≥–æ –æ–±—ä–µ–º–∞
python enhanced_main.py --input migrated_data/dialogs.xlsx --optimize-for 10000
```

## 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤

- –û—Ç–∫—Ä–æ–π—Ç–µ `enhanced_results/quality_dashboard.html` –≤ –±—Ä–∞—É–∑–µ—Ä–µ
- –ò–∑—É—á–∏—Ç–µ `enhanced_results/processing_report.md`
- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ `enhanced_results/enhanced_results.json`

## 5. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞

- –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Redis –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
- –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∞–ª–µ—Ä—Ç—ã –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
- –ó–∞–ø—É—Å—Ç–∏—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ñ–æ–Ω–µ

## 6. –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è

- –î–ª—è 10,000+ –¥–∏–∞–ª–æ–≥–æ–≤ –≤–∫–ª—é—á–∏—Ç–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
- –ù–∞—Å—Ç—Ä–æ–π—Ç–µ A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–æ–≤
- –í–∫–ª—é—á–∏—Ç–µ –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ

## –ü–æ–¥–¥–µ—Ä–∂–∫–∞

- –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: ENHANCED_README.md
- –õ–æ–≥–∏: enhanced_system.log
- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: enhanced_config.json
"""
    
    with open("QUICK_START_ENHANCED.md", "w", encoding="utf-8") as f:
        f.write(guide)
    
    print("   ‚úì –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ —Å–æ–∑–¥–∞–Ω–æ: QUICK_START_ENHANCED.md")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏"""
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –Ω–∞ —É–ª—É—á—à–µ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É...")
    print("=" * 50)
    
    try:
        # –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
        migrate_config()
        migrate_data()
        migrate_prompts()
        create_migration_report()
        create_quick_start_guide()
        
        print("=" * 50)
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements_enhanced.txt")
        print("2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ API –∫–ª—é—á –≤ enhanced_config.json")
        print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç: python enhanced_main.py --input migrated_data/dialogs.xlsx --output test_results")
        print("4. –ò–∑—É—á–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ test_results/")
        print("\nüìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:")
        print("- ENHANCED_README.md - –ø–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è")
        print("- QUICK_START_ENHANCED.md - –±—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç")
        print("- migration_report.json - –æ—Ç—á–µ—Ç –æ –º–∏–≥—Ä–∞—Ü–∏–∏")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        logger.error(f"–û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")

if __name__ == "__main__":
    main()
